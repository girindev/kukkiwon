# Copyright IBM Corp. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#

version: '2'

services:
  peer-base:
    image: hyperledger/fabric-peer:$IMAGE_TAG #해당 이미지 사용.
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      # the following setting starts chaincode containers on the same
      # bridge network as the peers
      # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_byfn #사용할 네트워크 설정.
      - CORE_LOGGING_LEVEL=INFO #로깅 레벨
      #- CORE_LOGGING_LEVEL=DEBUG
      - CORE_PEER_TLS_ENABLED=true # 보안설정 (TLS) 사용 여부
      - CORE_PEER_GOSSIP_USELEADERELECTION=true #Peer가 ORG의 Orderer가 Down 되었거나 아래 옵션이 false인 경우 Fabric에서 자체적으로 Leader Peer를 선택하거나 선출할 능력의 유무.
      - CORE_PEER_GOSSIP_ORGLEADER=false #Peer가 Leader Peer의 접속 유무
      - CORE_PEER_PROFILE_ENABLED=true #Profile Service의 사용 유무
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt #Peer간 통신에 사용될 인증서 파일
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key #Peer간 통신에 사용될 Key 파일
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer #생성된 컨테이너의 작업 디렉토리.
    networks:
      - byfn
    command: peer node start #컨테이너 생성 후 실행할 명령어
